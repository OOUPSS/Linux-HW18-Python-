import mysql.connector
from mysql.connector import Error

def create_connection():
    try:
        connection = mysql.connector.connect(
            host='localhost',
            database='employees_db',
            user='root',
            password='password'
        )
        if connection.is_connected():
            print("Connected to MySQL database")
        return connection
    except Error as e:
        print(f"Error: {e}")
        return None

def create_table(connection):
    cursor = connection.cursor()
    create_table_sql = '''CREATE TABLE IF NOT EXISTS employees (
                            id INT AUTO_INCREMENT PRIMARY KEY,
                            name VARCHAR(255) NOT NULL,
                            age INT,
                            department VARCHAR(255),
                            salary FLOAT);'''
    try:
        cursor.execute(create_table_sql)
        print("Table 'employees' created successfully.")
    except Error as e:
        print(f"Error: {e}")

def insert_employee(connection, name, age, department, salary):
    cursor = connection.cursor()
    insert_sql = '''INSERT INTO employees (name, age, department, salary)
                    VALUES (%s, %s, %s, %s);'''
    employee_data = (name, age, department, salary)
    try:
        cursor.execute(insert_sql, employee_data)
        connection.commit()
        print(f"Employee {name} added successfully.")
    except Error as e:
        print(f"Error: {e}")

def select_all_employees(connection):
    cursor = connection.cursor()
    select_sql = '''SELECT * FROM employees;'''
    try:
        cursor.execute(select_sql)
        rows = cursor.fetchall()
        for row in rows:
            print(row)
    except Error as e:
        print(f"Error: {e}")

def update_employee(connection, employee_id, name=None, age=None, department=None, salary=None):
    cursor = connection.cursor()
    update_sql = '''UPDATE employees
                    SET name = %s, age = %s, department = %s, salary = %s
                    WHERE id = %s;'''
    updated_data = (name, age, department, salary, employee_id)
    try:
        cursor.execute(update_sql, updated_data)
        connection.commit()
        print(f"Employee with ID {employee_id} updated successfully.")
    except Error as e:
        print(f"Error: {e}")

def delete_employee(connection, employee_id):
    cursor = connection.cursor()
    delete_sql = '''DELETE FROM employees WHERE id = %s;'''
    try:
        cursor.execute(delete_sql, (employee_id,))
        connection.commit()
        print(f"Employee with ID {employee_id} deleted successfully.")
    except Error as e:
        print(f"Error: {e}")

def main():
    connection = create_connection()
    
    if connection:
        create_table(connection)
        
        insert_employee(connection, "John Doe", 30, "HR", 55000.0)
        insert_employee(connection, "Jane Smith", 45, "Engineering", 75000.0)
        insert_employee(connection, "Alice Johnson", 38, "Marketing", 65000.0)
        
        print("\nAll employees:")
        select_all_employees(connection)
        
        print("\nUpdating employee with ID 1:")
        update_employee(connection, 1, name="John Doe Jr.", age=31, salary=56000.0)
        
        print("\nDeleting employee with ID 2:")
        delete_employee(connection, 2)
        
        print("\nAll employees after updates:")
        select_all_employees(connection)
        
        connection.close()

if __name__ == "__main__":
    main()
